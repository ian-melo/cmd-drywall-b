/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cmd.novo.telas;

import cmd.entidade.Cliente;
import cmd.entidade.Endereco;
import cmd.entidade.PessoaFisica;
import cmd.entidade.PessoaJuridica;
import cmd.entidade.Telefone;
import cmd.entidade.TelefoneId;
import cmd.novo.Validacao;
import cmd.novo.cep.WebServiceCep;
import cmd.novo.controle.CadClientesControle;
import cmd.novo.painel.PnlJuridica;
import cmd.novo.painel.PnlFisica;
//import cmd.novo.painel.PnlTelefone;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Usuario
 */
public class TCliente extends javax.swing.JInternalFrame {

    public static TCliente clienteT;
    PnlFisica pFi = new PnlFisica();
    PnlJuridica pJu = new PnlJuridica();

    //PnlTelefone pTe = new PnlTelefone();
    public static TCliente getInstancia() {
        if (clienteT == null) {
            clienteT = new TCliente();
        }
        return clienteT;
    }

    /**
     * Creates new form ClienteT
     */
    public TCliente() {
        initComponents();
        getContentPane().setBackground(Color.WHITE);
        pnl_escolha.setBackground(Color.WHITE);
        pnl_telefone.setBackground(Color.WHITE);
        pnl_botoes.setBackground(Color.WHITE);
        pnl_endereco.setBackground(Color.WHITE);
        pnl_cliente_pai.setBackground(Color.WHITE);
        pnl_metade.setBackground(Color.WHITE);
        pnl_baixo.setBackground(Color.WHITE);

        pJuridica();//Inicai com Pessoa Juridica Selecionado
        colocaDataAtual();

//        
//        pnl_baixo.setLocation(10, 10);
//        pnl_baixo.setSize(10, 10);
//        int x = this.getHeight();
//        int y = this.getWidth();
//        this.setSize(y - 1, x - 1);
//        this.setSize(y, x);
        //pnl_scroll_telefone.removeAll();//remove cliente anterior
        //GridLayout gerente1 = new GridLayout(5, 1);//Mostra até 2 itens um em baixo do outro
        //pnl_scroll_telefone.setLayout(gerente1);//apenas um ajuste
        //pnl_scroll_telefone.add(pTe);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_escolha = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmb_pessoa = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        lb_dataInscricao = new javax.swing.JLabel();
        pnl_endereco = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txt_logradouro = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txt_numero = new javax.swing.JTextField();
        txt_bairro = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txt_cidade = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txt_uf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_complemento = new javax.swing.JTextField();
        txt_cep = new javax.swing.JFormattedTextField();
        pnl_botoes = new javax.swing.JPanel();
        btn_Cadastrar = new javax.swing.JButton();
        btn_Alterar = new javax.swing.JButton();
        btn_Sair = new javax.swing.JButton();
        pnl_baixo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_FisicaEjuridica = new javax.swing.JTable();
        pnl_metade = new javax.swing.JPanel();
        pnl_cliente_pai = new javax.swing.JPanel();
        pnl_telefone = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txt_tel1 = new javax.swing.JFormattedTextField();
        txt_cel1 = new javax.swing.JFormattedTextField();
        txt_cel2 = new javax.swing.JFormattedTextField();

        setClosable(true);
        setResizable(true);
        setTitle("Cadastro de Clientes");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Bem-Vindo a Área de Cadastro de Clientes");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Selecione pessoa física ou jurídica:");

        cmb_pessoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmb_pessoa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pessoa Jurídica", "Pessoa Física" }));
        cmb_pessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_pessoaActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Data de inscrição: ");

        lb_dataInscricao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lb_dataInscricao.setText("##/##/####");

        javax.swing.GroupLayout pnl_escolhaLayout = new javax.swing.GroupLayout(pnl_escolha);
        pnl_escolha.setLayout(pnl_escolhaLayout);
        pnl_escolhaLayout.setHorizontalGroup(
            pnl_escolhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_escolhaLayout.createSequentialGroup()
                .addGroup(pnl_escolhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_escolhaLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1))
                    .addGroup(pnl_escolhaLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(cmb_pessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_escolhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnl_escolhaLayout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lb_dataInscricao, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_escolhaLayout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addComponent(jLabel2))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_escolhaLayout.setVerticalGroup(
            pnl_escolhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_escolhaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmb_pessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl_escolhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lb_dataInscricao)))
        );

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("CEP:*");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Logradouro:*");

        txt_logradouro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Numero:*");

        txt_numero.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_numero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_numeroFocusLost(evt);
            }
        });

        txt_bairro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Bairro:*");

        txt_cidade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Cidade:*");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("UF:*");

        txt_uf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Complemento");

        txt_complemento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        try {
            txt_cep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_cep.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_cepFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_cepFocusLost(evt);
            }
        });

        javax.swing.GroupLayout pnl_enderecoLayout = new javax.swing.GroupLayout(pnl_endereco);
        pnl_endereco.setLayout(pnl_enderecoLayout);
        pnl_enderecoLayout.setHorizontalGroup(
            pnl_enderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_enderecoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_enderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_enderecoLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_enderecoLayout.createSequentialGroup()
                        .addGroup(pnl_enderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_complemento, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_logradouro, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_enderecoLayout.createSequentialGroup()
                                .addGroup(pnl_enderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(txt_cep, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                                .addGroup(pnl_enderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(txt_uf, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_enderecoLayout.createSequentialGroup()
                                .addGroup(pnl_enderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel18)
                                    .addGroup(pnl_enderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txt_numero, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txt_bairro, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_cidade, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(30, 30, 30))))
        );
        pnl_enderecoLayout.setVerticalGroup(
            pnl_enderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_enderecoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_enderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_enderecoLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_cep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3))
                    .addGroup(pnl_enderecoLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_uf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_logradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_bairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_cidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_complemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_Cadastrar.setBackground(new java.awt.Color(153, 153, 255));
        btn_Cadastrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_Cadastrar.setText("Cadastrar");
        btn_Cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CadastrarActionPerformed(evt);
            }
        });

        btn_Alterar.setBackground(new java.awt.Color(153, 153, 255));
        btn_Alterar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_Alterar.setText("Alterar");
        btn_Alterar.setEnabled(false);

        btn_Sair.setBackground(new java.awt.Color(153, 153, 255));
        btn_Sair.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_Sair.setText("Sair");
        btn_Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_botoesLayout = new javax.swing.GroupLayout(pnl_botoes);
        pnl_botoes.setLayout(pnl_botoesLayout);
        pnl_botoesLayout.setHorizontalGroup(
            pnl_botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_botoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_Cadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_Alterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_Sair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_botoesLayout.setVerticalGroup(
            pnl_botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_botoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_Cadastrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Alterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Sair)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        tb_FisicaEjuridica.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tb_FisicaEjuridica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Razão Social", "Ramo Atuação", "Telefone", "CEP", "Cidade"
            }
        ));
        jScrollPane1.setViewportView(tb_FisicaEjuridica);

        javax.swing.GroupLayout pnl_baixoLayout = new javax.swing.GroupLayout(pnl_baixo);
        pnl_baixo.setLayout(pnl_baixoLayout);
        pnl_baixoLayout.setHorizontalGroup(
            pnl_baixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        pnl_baixoLayout.setVerticalGroup(
            pnl_baixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_baixoLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnl_cliente_paiLayout = new javax.swing.GroupLayout(pnl_cliente_pai);
        pnl_cliente_pai.setLayout(pnl_cliente_paiLayout);
        pnl_cliente_paiLayout.setHorizontalGroup(
            pnl_cliente_paiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 217, Short.MAX_VALUE)
        );
        pnl_cliente_paiLayout.setVerticalGroup(
            pnl_cliente_paiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 141, Short.MAX_VALUE)
        );

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Telefone:*");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Celular 1:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Celular 2:");

        try {
            txt_tel1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_tel1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_tel1FocusLost(evt);
            }
        });

        try {
            txt_cel1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_cel1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_cel1FocusLost(evt);
            }
        });

        try {
            txt_cel2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_cel2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_cel2FocusLost(evt);
            }
        });

        javax.swing.GroupLayout pnl_telefoneLayout = new javax.swing.GroupLayout(pnl_telefone);
        pnl_telefone.setLayout(pnl_telefoneLayout);
        pnl_telefoneLayout.setHorizontalGroup(
            pnl_telefoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_telefoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_telefoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_telefoneLayout.createSequentialGroup()
                        .addGroup(pnl_telefoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(txt_tel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txt_cel1)
                    .addComponent(txt_cel2))
                .addContainerGap())
        );
        pnl_telefoneLayout.setVerticalGroup(
            pnl_telefoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_telefoneLayout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_tel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_cel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_cel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnl_metadeLayout = new javax.swing.GroupLayout(pnl_metade);
        pnl_metade.setLayout(pnl_metadeLayout);
        pnl_metadeLayout.setHorizontalGroup(
            pnl_metadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_metadeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_cliente_pai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnl_telefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_metadeLayout.setVerticalGroup(
            pnl_metadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_metadeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl_metadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_telefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnl_cliente_pai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnl_escolha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(256, 256, 256))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnl_metade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnl_endereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnl_botoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnl_baixo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(pnl_botoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnl_escolha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnl_endereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnl_metade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnl_baixo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_SairActionPerformed

    private void cmb_pessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_pessoaActionPerformed

        if (cmb_pessoa.getSelectedIndex() == 0) {//Pessoa Juridica
            pJuridica();
        }
        if (cmb_pessoa.getSelectedIndex() == 1) {//Pessoa Fisica
            pFisica();
        }

        //Atualiza form...pequeno erro grafico
        pequenoBug();//Corrige

    }//GEN-LAST:event_cmb_pessoaActionPerformed

    private void btn_CadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CadastrarActionPerformed
        if (verificaCamposEndereco() == false) {
            JOptionPane.showMessageDialog(null, "Preencha todos os canpos referentes ao Endereço");
        }
        if ("".equals(txt_tel1.getText().trim()) || "(  )     -    ".equals(txt_tel1.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Preencha o Telefone");
            return;
        }
//----> A VERIFICAÇÃO ACIMA DEVE SER FEITO PARA AMBAS AS PESSOAS(CLIENTES)

//==============================================================================
//===========================PESSOA JURIDICA====================================
//==============================================================================
        if (cmb_pessoa.getSelectedIndex() == 0) {
            if (verificaPessoaJuridica() == false) {//verifica os campos
                return;
            }

//=======================================
//     PROGRAMAÇÃO PARA SALVAR NO BD(colocar aqui)
//=======================================
            CadClientesControle cadCliC = new CadClientesControle();
            Cliente cli = new Cliente();
            Endereco end = new Endereco();
            PessoaJuridica pJur = new PessoaJuridica();

            Telefone tel = new Telefone();
            TelefoneId telId = new TelefoneId();
            HashSet<Telefone> tels = new HashSet<>();

            end.setCodEndereco(2);
            end.setBairro(txt_bairro.getText());
            end.setCep(txt_cep.getText());
            end.setCidade(txt_cidade.getText());
            end.setComplemento(txt_complemento.getText());
            end.setLogradouro(txt_logradouro.getText());
            end.setNumero(txt_numero.getText());
            end.setUf(txt_uf.getText());
            end.setXdead(false);

            pJur.setCodCliente(2);
            pJur.setCnpj(pJu.getTxt_cnpj_pnl());
            pJur.setDataFundacao(pJur.getDataFundacao());
            pJur.setRamoAtuacao(pJur.getRamoAtuacao());
            pJur.setRazaoSocial(pJur.getRazaoSocial());
            pJur.setXdead(false);

//===============================TELEFONE=======================================
            telId.setNumero(txt_tel1.getText());
            //telId.setCodCliente(cli.getCodCliente());
            telId.setCodCliente(1);//Temporario
            tel.setId(telId);
            tel.setCliente(null);
            tel.setXdead(false);

            tels.add(tel);

            if (!"(  )     -    ".equals(txt_cel1.getText())) {//só entra se estiver preenchido
                tel = new Telefone();
                telId = new TelefoneId();

                telId.setNumero(txt_cel1.getText());
                //telId.setCodCliente(cli.getCodCliente());
                telId.setCodCliente(1);//Temporario
                tel.setId(telId);
                tel.setCliente(null);
                tel.setXdead(false);

                tels.add(tel);
            }

            if (!"(  )     -    ".equals(txt_cel2.getText())) {//só entra se estiver preenchido
                tel = new Telefone();
                telId = new TelefoneId();

                telId.setNumero(txt_cel2.getText());
                //telId.setCodCliente(cli.getCodCliente());//ERRO!!!!!!!!!!!!!!!!!
                telId.setCodCliente(1);//Temporario
                tel.setId(telId);
                tel.setCliente(null);
                tel.setXdead(false);

                tels.add(tel);
            }
//==============================================================================
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            Date dataDate = null;
            try {
                dataDate = formato.parse(lb_dataInscricao.getText());
            } catch (ParseException ex) {
                Logger.getLogger(Validacao.class.getName()).log(Level.SEVERE, null, ex);

            }

            cli.setCodCliente(null);
            cli.setOrcamentos(null);
            cli.setDataInscricao(dataDate);
            cli.setEndereco(end);
            cli.setPessoaJuridica(pJur);
            cli.setTelefones(tels);
            cli.setXdead(false);

            if (cadCliC.CadastrarClientePJuridicoEnderecoTelefone(cli) == true) {
                JOptionPane.showMessageDialog(null, "Cadastrado");

            }

        }

//==============================================================================
//============================PESSOA FISICA=====================================
//==============================================================================
        if (cmb_pessoa.getSelectedIndex() == 1) {
            if (verificaPessoaFisica() == false) {//verifica os campos
                return;
            }

//=======================================
//     PROGRAMAÇÃO PARA SALVAR NO BD(colocar aqui)
//=======================================
            CadClientesControle cadCliC = new CadClientesControle();
            Cliente cli = new Cliente();
            Endereco end = new Endereco();
            PessoaFisica pFis = new PessoaFisica();

            Telefone tel = new Telefone();
            TelefoneId telId = new TelefoneId();
            HashSet<Telefone> tels = new HashSet<>();

            end.setCodEndereco(2);
            end.setBairro(txt_bairro.getText());
            end.setCep(txt_cep.getText());
            end.setCidade(txt_cidade.getText());
            end.setComplemento(txt_complemento.getText());
            end.setLogradouro(txt_logradouro.getText());
            end.setNumero(txt_numero.getText());
            end.setUf(txt_uf.getText());
            end.setXdead(false);

            pFis.setCpf(pFi.getTxt_cpf_pnl());
            pFis.setDataNascimento(pFi.getTxt_dataNasc_pnl());
            pFis.setNome(pFi.getTxt_nome_pnl());
            pFis.setXdead(false);

//===============================TELEFONE=======================================
            telId.setNumero(txt_tel1.getText());
            //telId.setCodCliente(cli.getCodCliente());
            telId.setCodCliente(1);//Temporario
            tel.setId(telId);
            tel.setCliente(null);
            tel.setXdead(false);

            tels.add(tel);

            if (!"(  )     -    ".equals(txt_cel1.getText())) {//só entra se estiver preenchido
                tel = new Telefone();
                telId = new TelefoneId();

                telId.setNumero(txt_cel1.getText());
                //telId.setCodCliente(cli.getCodCliente());
                telId.setCodCliente(1);//Temporario
                tel.setId(telId);
                tel.setCliente(null);
                tel.setXdead(false);

                tels.add(tel);
            }

            if (!"(  )     -    ".equals(txt_cel2.getText())) {//só entra se estiver preenchido
                tel = new Telefone();
                telId = new TelefoneId();

                telId.setNumero(txt_cel2.getText());
                //telId.setCodCliente(cli.getCodCliente());//ERRO!!!!!!!!!!!!!!!!!
                telId.setCodCliente(1);//Temporario
                tel.setId(telId);
                tel.setCliente(null);
                tel.setXdead(false);

                tels.add(tel);
            }
//==============================================================================
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            Date dataDate = null;
            try {
                dataDate = formato.parse(lb_dataInscricao.getText());
            } catch (ParseException ex) {
                Logger.getLogger(Validacao.class.getName()).log(Level.SEVERE, null, ex);

            }

            cli.setCodCliente(null);
            cli.setOrcamentos(null);
            cli.setDataInscricao(dataDate);
            cli.setEndereco(end);
            cli.setPessoaFisica(pFis);
            cli.setTelefones(tels);
            cli.setXdead(false);

            if (cadCliC.CadastrarClientePFisicaEnderecoTelefone(cli) == true) {
                JOptionPane.showMessageDialog(null, "Cadastrado");

            }

        }

//        //Exemplo de como funciona para pegar valores dentro do JTextField de outro JPanel
//        //Colocar igual ao exemplo do JOptionPane.showMessageDialog em baixo
//        //Ele pega no com um get q foi colocado no JPanel
//        if (cmb_pessoa.getSelectedIndex() == 0) {//Pessoa Juridica
//
//            JOptionPane.showMessageDialog(null, pJu.getTxt_cnpj_pnl());
//            JOptionPane.showMessageDialog(null, pJu.getTxt_razaoSocial_pnl());
//        }
//        if (cmb_pessoa.getSelectedIndex() == 1) {//Pessoa Fisica
//            JOptionPane.showMessageDialog(null, pFi.getTxt_cpf_pnl());
//            JOptionPane.showMessageDialog(null, pFi.getTxt_nome_pnl());
//        }

    }//GEN-LAST:event_btn_CadastrarActionPerformed

    private void txt_cepFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cepFocusLost
        Validacao vali = new Validacao();

        if (vali.validarCep(txt_cep.getText())) {
            buscaCep(txt_cep.getText());
        } else {
            JOptionPane.showMessageDialog(pnl_telefone, "Verifique o Cep");
        }

    }//GEN-LAST:event_txt_cepFocusLost

    private void txt_cepFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cepFocusGained
        //txt_cep.selectAll();
        //txt_cep.select(2, 4);
        //txt_cidade.grabFocus();
        //txt_cidade.select(2, 4);
        //txt_cep.grabFocus();
//        txt_cep.requestFocus();
//        txt_cep.select(0, 4);

    }//GEN-LAST:event_txt_cepFocusGained

    private void txt_numeroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_numeroFocusLost
        Validacao vali = new Validacao();
        if (vali.validarNumero(txt_numero.getText())) {
            return;
        }

        JOptionPane.showMessageDialog(pnl_telefone, "Verifique o numero");
    }//GEN-LAST:event_txt_numeroFocusLost

    private void txt_tel1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_tel1FocusLost
        Validacao vali = new Validacao();
        if (vali.validarTelefone(txt_tel1.getText())) {
            return;
        }
        JOptionPane.showMessageDialog(pnl_telefone, "Verifique o Telefone");
    }//GEN-LAST:event_txt_tel1FocusLost

    private void txt_cel1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cel1FocusLost
        Validacao vali = new Validacao();
        if (vali.validarTelefone(txt_cel1.getText())) {
            return;
        }
        JOptionPane.showMessageDialog(pnl_telefone, "Verifique o Celular 1");
    }//GEN-LAST:event_txt_cel1FocusLost

    private void txt_cel2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cel2FocusLost
        Validacao vali = new Validacao();
        if (vali.validarTelefone(txt_cel2.getText())) {
            return;
        }
        JOptionPane.showMessageDialog(pnl_telefone, "Verifique o Celular 2");
    }//GEN-LAST:event_txt_cel2FocusLost

    private void pequenoBug() {
        int x = this.getHeight();
        int y = this.getWidth();
        this.setSize(y - 1, x - 1);
        this.setSize(y, x);
    }

    //Verifica se o campo foi preenchido
    public boolean verificaPessoaJuridica() {
        if ("".equals(pJu.getTxt_cnpj_pnl().trim()) || "  .   .   /    -  ".equals(pJu.getTxt_cnpj_pnl().trim())) {
            JOptionPane.showMessageDialog(null, "Preencha o CNPJ");
            return false;
        }
        if ("".equals(pJu.getTxt_razaoSocial_pnl().trim())) {
            JOptionPane.showMessageDialog(null, "Preencha a Razão Social");
            return false;
        }
        if (pJu.getTxt_datafundacao_pnl() == null) {
            JOptionPane.showMessageDialog(null, "Preencha o <<<<<<<<<<<<<<<<");
            return false;
        }
//        Não obrigatorio?
//        if ("".equals(pJu.getTxt_ramoAtuacao_pnl().trim())) {
//            JOptionPane.showMessageDialog(null, "Preencha o Ramo de Atuação");
//            return;
//        }
        return true;
    }

    public boolean verificaPessoaFisica() {
        if ("".equals(pFi.getTxt_cpf_pnl().trim()) || "   .   .   -  ".equals(pFi.getTxt_cpf_pnl().trim())) {
            JOptionPane.showMessageDialog(null, "Preencha o CPF");
            return false;
        }
        if ("".equals(pFi.getTxt_nome_pnl().trim())) {
            JOptionPane.showMessageDialog(null, "Preencha o Nome");
            return false;
        }
        if (pFi.getTxt_dataNasc_pnl() == null) {
            JOptionPane.showMessageDialog(null, "Preencha a Data");
            return false;
        }

        return true;
    }

    public void buscaCep(String cep) {
        txt_logradouro.setEnabled(false);
        txt_cidade.setEnabled(false);
        txt_bairro.setEnabled(false);
        txt_uf.setEnabled(false);

        new Thread(() -> {
            //Faz a busca para o cep 58043-280
            WebServiceCep webServiceCep = WebServiceCep.searchCep(cep);
            //A ferramenta de busca ignora qualquer caracter que não seja numero.

            //caso a busca ocorra bem, imprime os resultados.
            if (webServiceCep.wasSuccessful()) {
                txt_logradouro.setText(webServiceCep.getLogradouroFull());
                txt_cidade.setText(webServiceCep.getCidade());
                txt_bairro.setText(webServiceCep.getBairro());
                txt_uf.setText(webServiceCep.getUf());
                //txt_uf.setSelectedItem(webServiceCep.getUf());
                System.out.println("Cep: " + webServiceCep.getCep());
                System.out.println("Logradouro: " + webServiceCep.getLogradouroFull());
                System.out.println("Bairro: " + webServiceCep.getBairro());
                System.out.println("Cidade: "
                        + webServiceCep.getCidade() + "/" + webServiceCep.getUf());

                //caso haja problemas imprime as exceções.
            } else {
                //JOptionPane.showMessageDialog(null, "Erro numero: " + webServiceCep.getResulCode());
                JOptionPane.showMessageDialog(null, "Descrição do erro: " + webServiceCep.getResultText());
            }

            txt_logradouro.setEnabled(true);
            txt_cidade.setEnabled(true);
            txt_bairro.setEnabled(true);
            txt_uf.setEnabled(true);
        }).start();
    }

    private void pJuridica() {
        pnl_cliente_pai.removeAll();//remove cliente anterior

        FlowLayout gerente = new FlowLayout(1);

        pnl_cliente_pai.setLayout(gerente);//apenas um ajuste

        pnl_cliente_pai.add(pJu);
    }

    private void pFisica() {
        pnl_cliente_pai.removeAll();//remove cliente anterior

        FlowLayout gerente = new FlowLayout(1);
        pnl_cliente_pai.setLayout(gerente);//apenas um ajuste

        pnl_cliente_pai.add(pFi);
    }

    private void colocaDataAtual() {
        try {

            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            lb_dataInscricao.setText(sdf.format(new Date(System.currentTimeMillis())));

        } catch (Exception e) {
            System.out.println(e);
        }

    }

    private boolean verificaCamposEndereco() {
//Verifica se todos os campos JTetField q estão dentro do pnl_endereco
//estão sem nada exceto o campo txt_complemento q pode ficar sem nada
        Component components[] = pnl_endereco.getComponents();
        int i;
        for (i = 0; i < components.length; i++) {
            if (components[i] instanceof JTextField) {
                if (((JTextField) components[i]).getText().isEmpty()) {
                    if (i != 1) {//Este IF força que o componenete JTextField "TXT_COMPLEMENTO" possa ficar vazio

                        return false;//False se NAO preenchido algum campo do endereço(dentro do pnl_endereco)
                        //break;
                    }

                    //JOptionPane.showMessageDialog(null, "Preencher todos os campos");
                    //return false;//False ser preenchido algum campo do endereço
                    //break;
                }
            }
        }
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Alterar;
    private javax.swing.JButton btn_Cadastrar;
    private javax.swing.JButton btn_Sair;
    private javax.swing.JComboBox cmb_pessoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_dataInscricao;
    private javax.swing.JPanel pnl_baixo;
    private javax.swing.JPanel pnl_botoes;
    private javax.swing.JPanel pnl_cliente_pai;
    private javax.swing.JPanel pnl_endereco;
    private javax.swing.JPanel pnl_escolha;
    private javax.swing.JPanel pnl_metade;
    private javax.swing.JPanel pnl_telefone;
    private javax.swing.JTable tb_FisicaEjuridica;
    private javax.swing.JTextField txt_bairro;
    private javax.swing.JFormattedTextField txt_cel1;
    private javax.swing.JFormattedTextField txt_cel2;
    private javax.swing.JFormattedTextField txt_cep;
    private javax.swing.JTextField txt_cidade;
    private javax.swing.JTextField txt_complemento;
    private javax.swing.JTextField txt_logradouro;
    private javax.swing.JTextField txt_numero;
    private javax.swing.JFormattedTextField txt_tel1;
    private javax.swing.JTextField txt_uf;
    // End of variables declaration//GEN-END:variables
/*
     ============================================================================
     *****************CONTEUDO SALVO DA ANTIGA TELA DE CLIENTE*******************
     ============================================================================
    
    
    
    
     public class ClienteFXMLController implements Initializable {

     private ClienteDAO dao = new ClienteDAO();
     private List<Entidadecliente> Listacli;
     private ObservableList<ClienteTableView> tableview = FXCollections.observableArrayList();
     @FXML
     private ComboBox<String> cmb_pessoa;
     @FXML
     private Label lb_dataInscricao;
     @FXML
     private Button bt_cadastrar;
     @FXML
     private Button bt_alterar;
     @FXML
     private Button bt_sair;
     @FXML
     private TableView<ClienteTableView> tb_fisica;
     @FXML
     private TableColumn<ClienteTableView, Integer> tc_id;
     @FXML
     private TableColumn<ClienteTableView, String> tc_nome;
     @FXML
     private TableColumn<ClienteTableView, String> tc_cpf;
     @FXML
     private TableColumn<ClienteTableView, String> tc_dataNasc;
     @FXML
     private TableColumn<ClienteTableView, String> tc_endereco;
     @FXML
     private TableColumn<ClienteTableView, String> tc_cep;
     @FXML
     private VBox vBox_fisica;
     @FXML
     private TextField txt_nome;
     @FXML
     private TextField txt_cpf;
     @FXML
     private TextField txt_dataNascimento;
     @FXML
     private VBox vBox_endereco;
     @FXML
     private TextField txt_cep;
     @FXML
     private TextField txt_logradouro;
     @FXML
     private TextField txt_numero;
     @FXML
     private TextField txt_bairro;
     @FXML
     private TextField txt_cidade;
     @FXML
     private TextField txt_uf;
     @FXML
     private VBox vBox_juridica;
     @FXML
     private TextField txt_razaoSocial;
     @FXML
     private TextField txt_cnpj;
     @FXML
     private TextField txt_ramo;
     @FXML
     private TextField txt_dataFundacao;
     @FXML
     private VBox vBox_telefone;
     @FXML
     private TableView<ClienteTableView> tb_juridica;
     @FXML
     private TableColumn<ClienteTableView, Integer> tc_id_juridica;
     @FXML
     private TableColumn<ClienteTableView, String> tc_razaoSocial;
     @FXML
     private TableColumn<ClienteTableView, String> tc_cnpj;
     @FXML
     private TableColumn<ClienteTableView, String> tc_dataFunda;
     @FXML
     private TableColumn<ClienteTableView, String> tc_endereco_Juridica;
     @FXML
     private TableColumn<ClienteTableView, String> tc_cep_Juridica;

     /*public void ListandoTableview() {
     Listacli = dao.ListaClientes();
     tableview.clear();

     for (Entidadecliente cli : Listacli) {
     ClienteTableView t = new ClienteTableView(cli.getId(), cli.getNome(), cli.getCpf(), cli.getEndereço(), cli.getProjeto(), cli.getProtocolo(), cli.getTelefone(), cli.getEmail());
     tableview.add(t);
     }
     tc_id.setCellValueFactory(new PropertyValueFactory<ClienteTableView, Integer>("Id"));
     tc_nome.setCellValueFactory(new PropertyValueFactory<ClienteTableView, String>("Nome"));
     tc_cpf.setCellValueFactory(new PropertyValueFactory<ClienteTableView, String>("Cpf"));
     tc_endereco.setCellValueFactory(new PropertyValueFactory<ClienteTableView, String>("Endereço"));

     tc_telefone.setCellValueFactory(new PropertyValueFactory<ClienteTableView, String>("Telefone"));

     tb_clientes.setItems(tableview);
     }
     */
//    public void protocolo()
//    {
//        Random gerador = new Random();
//        int numero = gerador.nextInt(1000);
//        lbl_protocolo.setText(Integer.toString(numero));
//    }
//    
    /**
     * Initializes the controller class.
     *
     * @Override public void initialize(URL url, ResourceBundle rb) {
     * inicia_ComboBox(); //ListandoTableview(); }
     *
     * private void inicia_ComboBox() { ObservableList<String> opcao =
     * FXCollections.observableArrayList( "Pessoa Físíca", "Pessoa Jurídica" );
     *
     * cmb_pessoa.setItems(opcao); }
     *
     * @FXML private void Cadastrar(ActionEvent event) { //if
     * (txt_nome.getText().isEmpty() || txt_cpf.getText().isEmpty()) { Alert
     * alerta1 = new Alert(Alert.AlertType.INFORMATION);
     * alerta1.setTitle("C.M.D"); alerta1.setHeaderText("C.M.D Informa!!!");
     * //alerta1.setContentText("preencha todos os campos para continuar");
     * alerta1.setContentText("Dados cadastrados com sucesso");
     * alerta1.showAndWait(); //} else {
     *
     * Entidadecliente cli = new Entidadecliente(); ClienteDAO dao = new
     * ClienteDAO(); String nome = txt_nome.getText(); //String endereço =
     * txt_endereco.getText(); String cpf = txt_cpf.getText(); //String projeto
     * = txt_projeto.getText(); //int numero_protocolo =
     * Integer.parseInt(lbl_protocolo.getText()); //String telefone =
     * txt_fone.getText(); //String email = txt_mail.getText();
     * cli.setNome(nome); cli.setCpf(cpf); //cli.setEndereço(endereço);
     * //cli.setProjeto(projeto); //cli.setProtocolo(numero_protocolo);
     * //cli.setTelefone(telefone); //cli.setEmail(email);
     *
     * //dao.Create(cli); txt_nome.setText("");
     *
     * txt_cpf.setText("");
     *
     *
     * //ListandoTableview();//+++++++++++++
     *
     * //}
     *
     * }
     *
     * @FXML private void Alterar(ActionEvent event) { if
     * (txt_nome.getText().isEmpty() || txt_cpf.getText().isEmpty()) { Alert
     * alerta1 = new Alert(Alert.AlertType.INFORMATION);
     * alerta1.setTitle("C.M.D"); alerta1.setHeaderText("C.M.D Informa!!!");
     * alerta1.setContentText("preencha todos os campos para continuar");
     * alerta1.showAndWait();
     *
     * } else { /* Entidadecliente cli = new Entidadecliente(); ClienteDAO dao =
     * new ClienteDAO();
     * cli.setId(tb_clientes.getSelectionModel().getSelectedItem().getId());
     * cli.setNome(txt_nome.getText()); cli.setCpf(txt_cpf.getText());
     * //cli.setEndereço(txt_endereco.getText());
     * //cli.setProjeto(txt_projeto.getText());
     * //cli.setProtocolo(Integer.parseInt(lbl_protocolo.getText()));
     * //cli.setTelefone(txt_fone.getText());
     * //cli.setEmail(txt_mail.getText()); dao.Update(cli);
     * txt_nome.setText(""); //txt_endereco.setText(""); txt_cpf.setText("");
     * //txt_projeto.setText(""); //lbl_protocolo.setText("");
     * //txt_fone.setText(""); //txt_mail.setText("");
     *
     *
     * //ListandoTableview();//++++++++++++++++++++++++
     *
     * }
     *
     * }
     *
     * @FXML private void Sair(ActionEvent event) throws IOException { Parent
     * cliente =
     * FXMLLoader.load(getClass().getResource("/cmd/fxml/PrincipalFXML.fxml"));
     * Scene scene = new Scene(cliente); Stage tela = (Stage) ((Node)
     * event.getSource()).getScene().getWindow(); tela.setScene(scene);
     * tela.show(); }
     *
     * @FXML private void Listar(MouseEvent event) { if (event.getClickCount()
     * == 1) { //ClienteTableView view =
     * tb_clientes.getSelectionModel().getSelectedItem(); ClienteTableView view
     * = tb_fisica.getSelectionModel().getSelectedItem(); String nome =
     * view.getNome(); String endereço = view.getEndereço(); String cpf =
     * view.getCpf(); String projeto = view.getProjeto(); int protocolo =
     * view.getProtocolo(); String telefone = view.getTelefone(); String email =
     * view.getEmail(); txt_nome.setText(nome);
     * //txt_endereco.setText(endereço); txt_cpf.setText(cpf);
     * //txt_projeto.setText(projeto);
     * //lbl_protocolo.setText(Integer.toString(protocolo));
     * //txt_fone.setText(telefone); //txt_mail.setText(email); } }
     *
     * @FXML private void cbm_click(ActionEvent event) { if
     * (cmb_pessoa.getSelectionModel().getSelectedIndex() == 0) {
     * vBox_fisica.setVisible(true); vBox_juridica.setVisible(false);
     *
     * tb_fisica.setVisible(true); tb_juridica.setVisible(false);
     *
     * } else if (cmb_pessoa.getSelectionModel().getSelectedIndex() == 1) {
     * vBox_fisica.setVisible(false); vBox_juridica.setVisible(true);
     *
     * tb_fisica.setVisible(false); tb_juridica.setVisible(true); }
     *
     * }
     *
     * }
     *
     *
     *
     */

}
