/*
 * Deixai toda esperança, ó vós que entrais!
 */
package cmd.novo.tela;

import cmd.DAO.ConstrucaoDAO;
import cmd.controle.ConstrucaoController;
import cmd.entidade.Forro;
import cmd.entidade.Parede;
import java.awt.Color;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 * Tela de seleção de construção
 *
 * @author Usuario
 */
public class TConstrucaoSelecao extends javax.swing.JInternalFrame {

    public static TConstrucaoSelecao construcaoSelecaoT;

    public int cod;

    public static TConstrucaoSelecao getInstancia() {
        if (construcaoSelecaoT == null) {
            construcaoSelecaoT = new TConstrucaoSelecao();
        }
        return construcaoSelecaoT;
    }

    /**
     * Creates new form TConstrucaoSelecao
     */
    public TConstrucaoSelecao() {
        initComponents();

        getContentPane().setBackground(Color.WHITE);
        tabbedP_ParedeForro.setBackground(Color.WHITE);
        panel_forro.setBackground(Color.WHITE);
        panel_parede.setBackground(Color.WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        tabbedP_ParedeForro = new javax.swing.JTabbedPane();
        panel_parede = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_construcaoParede = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        panel_forro = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tb_construcaoForro = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Selecione o tipo");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jButton1.setBackground(new java.awt.Color(153, 153, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Selecionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tabbedP_ParedeForro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        tabbedP_ParedeForro.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tb_construcaoParede.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tb_construcaoParede.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_construcaoParede.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_construcaoParedeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tb_construcaoParede);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 47, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Selecione a construção PAREDE:");

        javax.swing.GroupLayout panel_paredeLayout = new javax.swing.GroupLayout(panel_parede);
        panel_parede.setLayout(panel_paredeLayout);
        panel_paredeLayout.setHorizontalGroup(
            panel_paredeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_paredeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_paredeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        panel_paredeLayout.setVerticalGroup(
            panel_paredeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_paredeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabbedP_ParedeForro.addTab("PAREDE", panel_parede);

        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tb_construcaoForro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tb_construcaoForro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_construcaoForro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_construcaoForroMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tb_construcaoForro);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 478, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 55, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(jPanel2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Selecione a construção FORRO:");

        javax.swing.GroupLayout panel_forroLayout = new javax.swing.GroupLayout(panel_forro);
        panel_forro.setLayout(panel_forroLayout);
        panel_forroLayout.setHorizontalGroup(
            panel_forroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_forroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_forroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        panel_forroLayout.setVerticalGroup(
            panel_forroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_forroLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabbedP_ParedeForro.addTab("FORRO", panel_forro);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(tabbedP_ParedeForro, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(tabbedP_ParedeForro, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        TConstrucao.txt_id.setText(String.valueOf(cod));
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tb_construcaoParedeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_construcaoParedeMouseClicked
        int linha;
        if (evt.getClickCount() == 1) {
            linha = tb_construcaoParede.getSelectedRow();
            cod = (int) tb_construcaoParede.getValueAt(linha, 0);

        }
    }//GEN-LAST:event_tb_construcaoParedeMouseClicked

    private void tb_construcaoForroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_construcaoForroMouseClicked
        int linha;
        if (evt.getClickCount() == 1) {
            linha = tb_construcaoForro.getSelectedRow();
            cod = (int) tb_construcaoForro.getValueAt(linha, 0);

        }
    }//GEN-LAST:event_tb_construcaoForroMouseClicked

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        preencheAmbasTabelas();
    }//GEN-LAST:event_formInternalFrameActivated

    private void preencheTeste() {
        ConstrucaoController conC = new ConstrucaoController();
        ConstrucaoDAO ccc = new ConstrucaoDAO();
        for (Forro forS : conC.listarForros()) {
            System.out.println("===================================================");
            System.out.println("" + forS.getCodConstrucao());
            String val = Integer.toString(forS.getCodConstrucao());
            System.out.println("" + ccc.buscar(val).getDescricao());
            System.out.println("" + ccc.buscar(val).getDetalhes());
            System.out.println("" + ccc.buscar(val).getQualidade());
            System.out.println("" + forS.getEhRf());
            System.out.println("" + forS.getEhRu());
            System.out.println("" + forS.getEhSt());
            System.out.println("" + forS.getCodConstrucao());
        }
    }

    private void preencheAmbasTabelas() {
        preencheTabForro();
        preencheTabParede();
    }

    private void preencheTabForro() {
        tb_construcaoForro.removeAll();
        ConstrucaoController conC = new ConstrucaoController();
        Vector cabecalho = new Vector();

        cabecalho.add("CodConstrucao");//Tem em ambos
        cabecalho.add("Descricao");
        cabecalho.add("Detalhes");
        cabecalho.add("Qualidade");
        cabecalho.add("EhRf");
        cabecalho.add("EhRu");
        cabecalho.add("EhSt");

        //Itens
        Vector dados = new Vector();
        Vector item;

        for (Forro forS : conC.listarForros()) {
            item = new Vector();
            item.add(forS.getCodConstrucao());
            String val = Integer.toString(forS.getCodConstrucao());
            item.add(conC.buscarForro(val).getConstrucao().getDescricao());
            item.add(conC.buscarForro(val).getConstrucao().getDetalhes());
            item.add(conC.buscarForro(val).getConstrucao().getQualidade());
            if (forS.getEhRf()) {
                item.add("SIM");
            } else {
                item.add("NÃO");
            }
            if (forS.getEhRu()) {
                item.add("SIM");
            } else {
                item.add("NÃO");
            }
            if (forS.getEhSt()) {
                item.add("SIM");
            } else {
                item.add("NÃO");
            }
            dados.add(item);
        }
        DefaultTableModel modeloTabela = new DefaultTableModel();
        modeloTabela.setDataVector(dados, cabecalho);
        tb_construcaoForro.setModel(modeloTabela);

    }

    private void preencheTabParede() {
        tb_construcaoParede.removeAll();
        ConstrucaoController conC = new ConstrucaoController();
        //Itens
        Vector dados = new Vector();
        Vector item;
        //Titulo
        Vector cabecalho = new Vector();
        cabecalho.add("CodConstrucao");
        cabecalho.add("Descricao");
        cabecalho.add("Detalhes");
        cabecalho.add("Qualidade");
        cabecalho.add("AlturaLimiteo");
        cabecalho.add("Montante");
        cabecalho.add("EhRf");
        cabecalho.add("EhRu");
        cabecalho.add("EhSt");
        //Itens
        dados = new Vector();
        ConstrucaoDAO coDAO = new ConstrucaoDAO();
        for (Parede parS : conC.listarParedes()) {
            item = new Vector();
            item.add(parS.getCodConstrucao());
            String val = Integer.toString(parS.getCodConstrucao());
            item.add(coDAO.buscar(val).getDescricao());
            item.add(coDAO.buscar(val).getDetalhes());
            item.add(coDAO.buscar(val).getQualidade());
            item.add(parS.getAlturaLimite());
            item.add(parS.getMontante());
            if (parS.getEhRf()) {
                item.add("SIM");
            } else {
                item.add("NÃO");
            }
            if (parS.getEhRu()) {
                item.add("SIM");
            } else {
                item.add("NÃO");
            }
            if (parS.getEhSt()) {
                item.add("SIM");
            } else {
                item.add("NÃO");
            }
            dados.add(item);

        }
        DefaultTableModel modeloTabela = new DefaultTableModel();
        modeloTabela.setDataVector(dados, cabecalho);
        tb_construcaoParede.setModel(modeloTabela);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel panel_forro;
    private javax.swing.JPanel panel_parede;
    private javax.swing.JTabbedPane tabbedP_ParedeForro;
    private javax.swing.JTable tb_construcaoForro;
    private javax.swing.JTable tb_construcaoParede;
    // End of variables declaration//GEN-END:variables
}
